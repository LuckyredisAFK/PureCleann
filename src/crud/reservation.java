/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crud;

import admin.adminreservation;
import config.connectDB;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import panel.login;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author vienz
 */
public class reservation extends javax.swing.JFrame {
    
    private Map<String, Double> serviceCosts = new HashMap<>();
    private double selectedCost;

    /**
     * Creates new form reservation
     */
    public reservation() {
        initComponents();
        
    serviceCosts.put("Basic Cleaning", 50.0);
    serviceCosts.put("Deep Cleaning", 100.0);
    serviceCosts.put("Move in/ Move out Cleaning", 150.0);
    serviceCosts.put("Post Construction Cleaning", 200.0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        customername = new javax.swing.JTextField();
        logintext = new javax.swing.JLabel();
        Signup = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        customerrequired = new javax.swing.JLabel();
        cnumberequired = new javax.swing.JLabel();
        location = new javax.swing.JTextField();
        emailtext = new javax.swing.JLabel();
        locationrequired = new javax.swing.JLabel();
        contactnumber = new javax.swing.JTextField();
        cnumbertext = new javax.swing.JLabel();
        backlogin = new javax.swing.JLabel();
        role = new javax.swing.JComboBox<>();
        passwordtext1 = new javax.swing.JLabel();
        servicerequired = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        emailtext1 = new javax.swing.JLabel();
        datestartrequired = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        customername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                customernameFocusLost(evt);
            }
        });
        customername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customernameActionPerformed(evt);
            }
        });
        jPanel2.add(customername, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 72, 196, 30));

        logintext.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        logintext.setText("RESERVATION");
        jPanel2.add(logintext, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        Signup.setBackground(new java.awt.Color(241, 185, 185));
        Signup.setText("Create");
        Signup.setBorderPainted(false);
        Signup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SignupFocusLost(evt);
            }
        });
        Signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignupActionPerformed(evt);
            }
        });
        jPanel2.add(Signup, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 264, 19));

        jLabel1.setText("Customer Name");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, -1));

        customerrequired.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jPanel2.add(customerrequired, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 180, 10));

        cnumberequired.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jPanel2.add(cnumberequired, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 190, 10));

        location.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        location.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                locationFocusLost(evt);
            }
        });
        location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationActionPerformed(evt);
            }
        });
        jPanel2.add(location, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 146, 196, 30));

        emailtext.setText("Location");
        jPanel2.add(emailtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 124, 54, -1));

        locationrequired.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jPanel2.add(locationrequired, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 190, 10));

        contactnumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        contactnumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactnumberFocusLost(evt);
            }
        });
        contactnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactnumberActionPerformed(evt);
            }
        });
        jPanel2.add(contactnumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 197, 30));

        cnumbertext.setText("Contact Number");
        jPanel2.add(cnumbertext, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, -1, -1));

        backlogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/backlogin1.png"))); // NOI18N
        backlogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backloginMouseClicked(evt);
            }
        });
        jPanel2.add(backlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Choose Service type)", "Basic Cleaning", "Deep Cleaning", "Move in/ Move out Cleaning", "Post Construction Cleaning", "" }));
        role.setOpaque(false);
        role.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                roleFocusLost(evt);
            }
        });
        role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleActionPerformed(evt);
            }
        });
        jPanel2.add(role, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 200, 40));

        passwordtext1.setText("Service Type");
        jPanel2.add(passwordtext1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, -1, -1));

        servicerequired.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jPanel2.add(servicerequired, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 190, 10));

        date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateFocusLost(evt);
            }
        });
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });
        jPanel2.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 196, 30));

        emailtext1.setText("Date Start");
        jPanel2.add(emailtext1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 60, -1));

        datestartrequired.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jPanel2.add(datestartrequired, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 190, 10));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 530, 350));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_customernameFocusLost
        Font smallFont = new Font("Arial", Font.PLAIN, 10);
        customername.setFont(smallFont);
        customerrequired.setFont(smallFont);

        String user = customername.getText();

        if (user.isEmpty()) {
            customername.setForeground(Color.RED);
            customerrequired.setText("Customer Name is required");
            customerrequired.setForeground(Color.RED);
        } else {
            customername.setForeground(Color.BLACK);
            customerrequired.setText("");
        }

        customername.repaint();
    }//GEN-LAST:event_customernameFocusLost

    private void customernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customernameActionPerformed

    private void SignupFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SignupFocusLost

    }//GEN-LAST:event_SignupFocusLost

    private void SignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignupActionPerformed
// Validate customer name, location, contact number, and service
String customerName = customername.getText();
String locationText = location.getText();
String contactNumber = contactnumber.getText();
String packageType = (String) role.getSelectedItem();  // Changed to r_package
double cost = selectedCost;
String serviceStartDate = date.getText();  // Get the start date from the text field
String status = "Pending";  // Default status

// Check for any missing required fields
if (customerName.isEmpty() || locationText.isEmpty() || contactNumber.isEmpty() || packageType.equals("(Choose Service type)") || serviceStartDate.isEmpty()) {
    // Show a message or highlight the fields that are missing
    if (customerName.isEmpty()) {
        customerrequired.setText("Customer Name is required");
    }
    if (locationText.isEmpty()) {
        locationrequired.setText("Location is required");
    }
    if (contactNumber.isEmpty()) {
        cnumberequired.setText("Contact number is required");
    }
    if (packageType.equals("(Choose Service type)")) {
        servicerequired.setText("Service type is required");
    }
    if (serviceStartDate.isEmpty()) {
        datestartrequired.setText("Start date and time is required");
    }
} else {
    // Validate the date format
    if (!serviceStartDate.matches("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2} [APap][Mm]")) {
        datestartrequired.setText("Invalid date/time format. Use dd/MM/yyyy hh:mm AM/PM");
        datestartrequired.setForeground(Color.RED);
    } else {
        // Insert reservation into the database if everything is valid
        try {
            // Establish database connection
            connectDB db = new connectDB();
            Connection conn = db.getConnection();

            // SQL query to insert reservation details into tbl_reservation (r_package instead of r_type)
            String query = "INSERT INTO tbl_reservation (r_customername, r_package, r_creationdate, r_servicestartdate, r_status, r_cost, r_cnumber, r_location) "
                         + "VALUES (?, ?, NOW(), ?, ?, ?, ?, ?)";

            // Create prepared statement with RETURN_GENERATED_KEYS option
            PreparedStatement stmt = conn.prepareStatement(query, PreparedStatement.RETURN_GENERATED_KEYS);
            stmt.setString(1, customerName);
            stmt.setString(2, packageType);  // Changed to r_package
            stmt.setString(3, serviceStartDate);  // Set the actual service start date
            stmt.setString(4, status);           // Default "Pending"
            stmt.setDouble(5, cost);             // Set cost based on service selected
            stmt.setString(6, contactNumber);    // Contact number
            stmt.setString(7, locationText);     // Location

            // Execute the insert and retrieve generated keys
            int result = stmt.executeUpdate();
            if (result > 0) {
                // Get generated reservation ID
                java.sql.ResultSet rs = stmt.getGeneratedKeys();
                if (rs.next()) {
                    int reservationId = rs.getInt(1);  // Reservation ID
                    System.out.println("Reservation created successfully! ID: " + reservationId);
                    
                    // Optionally, you can assign an employee to the reservation here (future logic)
                    // Example: assignEmployee(reservationId, employeeId);  // future logic
                }

                // Optionally, clear the fields after submission
                customername.setText("");
                location.setText("");
                contactnumber.setText("");
                role.setSelectedIndex(0);  // Reset service type
                date.setText("");  // Reset the date field
            }
            
             // After successful submission, navigate back to the reservation panel
        this.dispose();  // Close the current window
        adminreservation reservation = new adminreservation();  // Create a new instance of reservation panel
        reservation.setVisible(true);  // Show the reservation panel
        } catch (Exception e) {
            e.printStackTrace();
            // Handle database exceptions
            System.out.println("Error inserting reservation: " + e.getMessage());
        }
    }
}

    }//GEN-LAST:event_SignupActionPerformed

    private void locationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationFocusLost
        Font smallFont = new Font("Arial", Font.PLAIN, 10);
location.setFont(smallFont);
locationrequired.setFont(smallFont);

String loc = location.getText();

// Check if location is empty
if (loc.isEmpty()) {
    location.setForeground(Color.RED);
    locationrequired.setText("Location is required");
    locationrequired.setForeground(Color.RED);
} else {
    location.setForeground(Color.BLACK);
    locationrequired.setText("");
}

location.repaint();

    }//GEN-LAST:event_locationFocusLost

    private void locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationActionPerformed

    }//GEN-LAST:event_locationActionPerformed

    private void contactnumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactnumberFocusLost
        Font smallFont = new Font("Arial", Font.PLAIN, 10);
contactnumber.setFont(smallFont);
cnumberequired.setFont(smallFont);

String contact = contactnumber.getText();

// Basic validation for contact number (assuming it should be numeric and not empty)
if (contact.isEmpty()) {
    contactnumber.setForeground(Color.RED);
    cnumberequired.setText("Contact number is required");
    cnumberequired.setForeground(Color.RED);
} else if (!contact.matches("\\d+")) {  // Check if the contact number is numeric
    contactnumber.setForeground(Color.RED);
    cnumberequired.setText("Invalid contact number");
    cnumberequired.setForeground(Color.RED);
} else {
    contactnumber.setForeground(Color.BLACK);
    cnumberequired.setText("");
}

contactnumber.repaint();
    }//GEN-LAST:event_contactnumberFocusLost

    private void contactnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactnumberActionPerformed

    private void backloginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backloginMouseClicked
        login log = new login();

        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backloginMouseClicked

    private void roleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roleFocusLost
        
    }//GEN-LAST:event_roleFocusLost

    private void roleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleActionPerformed
 // Retrieve the selected service from the JComboBox
    String selectedService = (String) role.getSelectedItem();

    // Validate the service selected
    if (!selectedService.equals("(Choose Service type)")) {
        // Get the corresponding cost for the selected service
        selectedCost = serviceCosts.getOrDefault(selectedService, 0.0);
        // Optional: Print the cost to the console for debugging
        System.out.println("Selected service cost: " + selectedCost);  
    } else {
        System.out.println("No valid service selected.");
    }
    
    }//GEN-LAST:event_roleActionPerformed

    private void dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFocusLost
Font smallFont = new Font("Arial", Font.PLAIN, 10);
datestartrequired.setFont(smallFont);

String serviceStartDate = date.getText(); // Assuming you have a text field for date input

// Basic validation for the service start date (assuming it should be in the format day/month/year hour:minute AM/PM)
if (serviceStartDate.isEmpty()) {
    datestartrequired.setText("Start date and time is required");
    datestartrequired.setForeground(Color.RED);
} else {
    // Check if the date is in the format day/month/year hour:minute AM/PM (e.g., 02/05/2025 02:30 PM)
    if (!serviceStartDate.matches("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2} [APap][Mm]")) {
        datestartrequired.setText("Invalid date/time format. Use dd/MM/yyyy hh:mm AM/PM");
        datestartrequired.setForeground(Color.RED);
    } else {
        // The format is correct, no error
        datestartrequired.setText("");
        datestartrequired.setForeground(Color.BLACK);
    }
}

datestartrequired.repaint();
    }//GEN-LAST:event_dateFocusLost

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Signup;
    private javax.swing.JLabel backlogin;
    private javax.swing.JLabel cnumberequired;
    private javax.swing.JLabel cnumbertext;
    private javax.swing.JTextField contactnumber;
    private javax.swing.JTextField customername;
    private javax.swing.JLabel customerrequired;
    private javax.swing.JTextField date;
    private javax.swing.JLabel datestartrequired;
    private javax.swing.JLabel emailtext;
    private javax.swing.JLabel emailtext1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField location;
    private javax.swing.JLabel locationrequired;
    private javax.swing.JLabel logintext;
    private javax.swing.JLabel passwordtext1;
    private javax.swing.JComboBox<String> role;
    private javax.swing.JLabel servicerequired;
    // End of variables declaration//GEN-END:variables
}
